{"version":3,"sources":["Components/Header.js","Components/Movie.js","Components/Search.js","Components/App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","text","Movie","_ref","movie","poster","Poster","Title","width","alt","concat","src","Year","Search","_useState","useState","_useState2","Object","slicedToArray","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","initialState","loading","movies","errorMessage","reducer","state","action","objectSpread","payload","error","App","_useReducer","useReducer","_useReducer2","dispatch","useEffect","fetch","then","response","json","jsonResponse","Components_Header","Components_Search","Response","Error","map","index","Components_Movie","key","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.938051bf.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => { \n    return (<header className=\"App-header\">      <h2>{props.text}</h2>    </header>); \n};\n\nexport default Header;\n\n","import React from \"react\";\n\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\nconst Movie = ({ movie }) => {\n    const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n    return (<div className=\"movie\">      <h2>{movie.Title}</h2>      <div>        <img width=\"200\" alt={`The movie titled: ${movie.Title}`} src={poster} />      </div>      <p>({movie.Year})\n    </p>    </div>);\n};\n\nexport default Movie;","import React, { useState } from \"react\";\n\nconst Search = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (e) => { setSearchValue(e.target.value); }\n\n    const resetInputField = () => { setSearchValue(\"\") }\n\n    const callSearchFunction = (e) => { e.preventDefault(); props.search(searchValue); resetInputField(); }\n\n    return (<form className=\"search\">        <input value={searchValue} onChange={handleSearchInputChanges} type=\"text\" />        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />      </form>);\n}\n\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\nconst initialState = { loading: true, movies: [], errorMessage: null };\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return { ...state, loading: true, errorMessage: null };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return { ...state, loading: false, movies: action.payload };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return { ...state, loading: false, errorMessage: action.error };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      dispatch({\n        type: \"SEARCH_MOVIES_SUCCESS\",\n        payload: jsonResponse.Search\n      });\n    });\n  }, []);\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: jsonResponse.Search\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_MOVIES_FAILURE\",\n          error: jsonResponse.Error\n        });\n      }\n    });\n  };\n  const { movies, errorMessage, loading } = state;\n\n  return (\n    <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">{\n          loading && !errorMessage ? (<span>loading... </span>) : errorMessage ? (\n            <div className=\"errorMessage\">\n              {errorMessage}\n            </div>): (movies.map((movie, index) => (<Movie key={`${index}-${movie.Title}`} movie={movie} />)))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//npmserviceWorker.unregister();\n"],"sourceRoot":""}